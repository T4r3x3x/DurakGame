syntax = "proto3";
package Services;

import "google/protobuf/wrappers.proto";
import "google/protobuf/empty.proto";

option csharp_namespace = "Connections.Services";

service LobbyService{ 
	rpc CreateLobby(CreateLobbyRequest) returns (CreateLobbyResponce);
	rpc DeleteLobby(ActionRequest) returns (google.protobuf.Empty);
	rpc JoinLobby(JoinRequest) returns (JoinResponce);
	rpc LeaveLobby(ActionRequest) returns (google.protobuf.Empty);
	rpc StartGame(ActionRequest) returns (google.protobuf.Empty);
	rpc PrepareToGame(ActionRequest) returns (google.protobuf.Empty);
	rpc KickPlayer(KickPlayerRequest) returns (google.protobuf.Empty);
	rpc GetLobbiesStream(google.protobuf.Empty) returns (stream LobbyListResponce);
	rpc GetLobbyStateStream(LobbyStateRequest) returns (stream LobbyStateResponce);
}

message CreateLobbyRequest{
	string name = 1;
	google.protobuf.StringValue password = 2;
	string creatorId = 3;
	LobbySetting gameSettings = 4;
}

message CreateLobbyResponce{
	string lobbyId = 1;
	bool isSuccessefully = 2;
}

message LobbyStateRequest{
	string id = 1;
}
message LobbyStateResponce{	
	repeated PlayerResponce players = 1; //добавить сеттингс?
}

message PlayerResponce{
	string nickname = 1;
	bool areReady = 2;
}

message JoinRequest{
	ActionRequest actionRequest = 1;
	google.protobuf.StringValue password = 2;
}

message JoinResponce{
	string lobbyId = 1;
	bool isSuccessefully = 2;
}

message ActionRequest{
	string lobbyId = 1;
	string senderId = 2;
}

message KickPlayerRequest{
	ActionRequest actionRequest = 1;
	string kickingPlayerId = 2;
}

message LobbyListResponce{
	repeated LobbyResponce lobbyList = 1;
}

message LobbyResponce{
	string id = 1;
	string name = 2;
	LobbySetting settings = 3;
	bool hasPassword = 4;
	int32 joinedPlayersCount = 5;
}

message LobbySetting{
	int32 playersCount = 1;
	DeckType deckType = 2;
	int32 playersStartCardsCount = 3;
}

enum DeckType{
	common = 0;
	extended = 1;
}